#!/bin/sh

# Automatically check and download jw.org: wp w g ws mwb
# Needed programs: bash wget gzip pgrep (these are normally preinstalled in most Linux distros)
# v2.3 - Updated download link and options of 'g' as large print came out

# Check for multiple instances
[ $(pgrep -c "`basename $0`") -gt 1 ] && { echo; echo -e "\e[1m\e[93m`basename $0`: \e[0mMutiple script instances found! \e[91mExiting..."; echo; exit 1; }

# Online checker
maj-online () {
  ipaddr='8.8.8.8'
  [[ -z `ping -c1 $ipaddr |& grep -o 'Network is unreachable'` ]] || exit 1
  [[ -z `ping -c3 $ipaddr |& grep -o '100% packet loss'` ]] && exit 0 || exit 2
}

# User options
DIRBASE='$HOME/Desktop/JWGet'
format='PDF' #EPUB,MOBI,PDF,RTF,BRL Choose one at a time
LANG='E'

# Site options
maguribase='https://www.jw.org/apps/'
option='TRGCHlZRQVNYVrXF'

# wget options
LOGFILE="/dev/null" # Can be set to "$DIRBASE/jwget.log"
opts="-bcN -a $LOGFILE --progress=dot:mega --content-disposition"

# Date generate
yearmonthb4=`date -u +%Y%m --date='last month'`
yearmonth0=`date -u +%Y%m`
yearmonth1=`date -u +%Y%m --date='next month'`
yearmonth2=`date -u +%Y%m --date='2 months'`
yearmonth3=`date -u +%Y%m --date='3 months'`
yearmonth4=`date -u +%Y%m --date='4 months'`

# Check directories
[ -d "$DIRBASE" ] || mkdir -p "$DIRBASE"
[ -d "$DIRBASE/wp" ] || mkdir -p "$DIRBASE/wp"
[ -d "$DIRBASE/w" ] || mkdir -p "$DIRBASE/w"
[ -d "$DIRBASE/g" ] || mkdir -p "$DIRBASE/g"
[ -d "$DIRBASE/ws" ] || mkdir -p "$DIRBASE/ws"
[ -d "$DIRBASE/mwb" ] || mkdir -p "$DIRBASE/mwb"

# Initialize directory and (optionally) logfile
cd "$DIRBASE"
# [ -f "$LOGFILE.gz" ] && gzip -dqkf "$LOGFILE.gz"

### Start of downloader

# Sleep while offline
while ! maj-online; do sleep 15m; done

echo "\n`date`\n" >> "$LOGFILE"
echo "\n******************************START OF SCRIPT RUN*******************************" >> "$LOGFILE"

magtype='wp'
cd "$DIRBASE/$magtype"
  echo "\n\n" >> "$LOGFILE"

  if [ $(($yearmonth0%2)) -eq 0 ]; then
  	issue0=$yearmonthb4
  	issue1=$yearmonth1
  	issue2=$yearmonth3
  else
	issue0=$yearmonth0
  	issue1=$yearmonth2
  	issue2=$yearmonth4
  fi  	
  	
  wget $opts "$maguribase$option?issue=$issue0&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $opts "$maguribase$option?issue=$issue1&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $opts "$maguribase$option?issue=$issue2&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  
magtype='w'
cd "$DIRBASE/$magtype"
  echo "\n\n" >> "$LOGFILE"

  [ $format = "PDF" ] && wopts="-Hr -nd -Aw_E_*.pdf" # Other existing filetypes in the directory will be deleted
  [ $format = "RTF" ] && wopts="-Hr -nd -Aw_E_*.zip" # Other existing filetypes in the directory will be deleted

  wget $wopts $opts "$maguribase$option?issue=$yearmonth0&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $wopts $opts "$maguribase$option?issue=$yearmonth1&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $wopts $opts "$maguribase$option?issue=$yearmonth2&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $wopts $opts "$maguribase$option?issue=$yearmonth3&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  
magtype='g'
cd "$DIRBASE/$magtype"
  echo "\n\n" >> "$LOGFILE"

  [ $format = "PDF" ] && gopts="-Hr -nd -Ag_E_*.pdf" # Other existing filetypes in the directory will be deleted
  [ $format = "RTF" ] && gopts="-Hr -nd -Ag_E_*.zip" # Other existing filetypes in the directory will be deleted

  if [ $(($yearmonth0%2)) -eq 1 ]; then
  	issue0=$yearmonthb4
  	issue1=$yearmonth1
  	issue2=$yearmonth3
  else
	issue0=$yearmonth0
  	issue1=$yearmonth2
  	issue2=$yearmonth4
  fi

  wget $gopts $opts "$maguribase$option?issue=$issue0&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $gopts $opts "$maguribase$option?issue=$issue1&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $gopts $opts "$maguribase$option?issue=$issue2&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1

magtype='ws'
cd "$DIRBASE/$magtype"
  echo "\n\n" >> "$LOGFILE"

  [ $format = "PDF" ] && wopts="-Hr -nd -Aws_E_*.pdf" # Other existing filetypes in the directory will be deleted
  [ $format = "RTF" ] && wopts="-Hr -nd -Aws_E_*.zip" # Other existing filetypes in the directory will be deleted

  wget $wopts $opts "$maguribase$option?issue=$yearmonth0&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $wopts $opts "$maguribase$option?issue=$yearmonth1&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $wopts $opts "$maguribase$option?issue=$yearmonth2&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $wopts $opts "$maguribase$option?issue=$yearmonth3&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  
magtype='mwb'
cd "$DIRBASE/$magtype"
  echo "\n\n" >> "$LOGFILE"

  wget $opts "$maguribase$option?issue=$yearmonth0&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $opts "$maguribase$option?issue=$yearmonth1&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $opts "$maguribase$option?issue=$yearmonth2&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  wget $opts "$maguribase$option?issue=$yearmonth3&output=html&pub=$magtype&fileformat=$format&langwritten=$LANG" && sleep 1
  while [ "`pgrep -c wget`" -gt 1 ]; do sleep 1; done

echo "\n                           ::::: End of script run :::::\n`date`\n" >> $LOGFILE

# Compress logfile
# cd "$DIRBASE"
# gzip -f "$LOGFILE"
